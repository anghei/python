"""
Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Запрашивать у пользователя данные и заполнять список необходимо только числами.
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам
не остановит работу скрипта, введя, например, команду «exit». При этом скрипт завершается, сформированный список
с числами выводится на экран.

Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
Вносить его в список, только если введено число. Класс-исключение должен не позволить пользователю ввести
текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""
# import re
# import string

# gen_abc = string.ascii_letters
# x = re.findall('[a-zA-Z]', gen_abc)
import re

class NonNum(Exception):
    def __init__(self, txt):
        self.txt = txt


# def validation(x):
#     try:
#         int(x)
#     except ValueError:
#         return x == 0


user_list = []

while True:
    user_data = input('Введите данные (для выхода наберите exit): ')
    user_temp = user_data
    validation_dot = re.match(r'^\.+', user_data)
    try:
        if user_data.lower() == 'exit':
            print(f'Созданный список - {user_list}')
            break
        elif user_data.isalpha() or validation_dot is not None:
            raise NonNum('Введите, пожалуйста, число')
    except (ValueError, NonNum) as Error:
        print(Error)
    else:
        user_list.append(user_data)
        print(user_list)
